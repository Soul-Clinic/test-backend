log_format  craft_log  '
$remote_addr => $host | $request $status | [$time_iso8601] $request_uri
$http_user_agent';

upstream craft_socket {
    server 127.0.0.1:1912; # Alan Turing
}

upstream craft_http {
    server 127.0.0.1:1954;
}

server {
    server_name		~^wcraft.(?<which>\w+).;

    root   	     	/root/wiredcraft/client/;
    index			index.htm;

    proxy_intercept_errors on;
    set $client_dir /root/wiredcraft/client;
    
    location ~ /(:wechat|:admin)/.*$ {
        access_log /root/Develop/nginx/craft.log.local.txt craft_log;
        proxy_pass http://craft_socket;
        add_header From	"Hunchensocket";
        proxy_read_timeout 1000d;	# 1000 day
        proxy_send_timeout 1000d;  # 1000 day

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;        
    }

    location ~ /(-|\+|api)/(?<api>.*) {
        access_log /root/Develop/nginx/craft.log.local.txt craft_log;        
        root 		/root/wiredcraft/node/;
        proxy_pass http://craft_http; # /$1?$args;
        proxy_set_header X-Real-IP $remote_addr;
        add_header IP $remote_addr;
        add_header For Server;
        add_header X-Forwarde-For $proxy_add_x_forwarded_for;
    }
    location ~ ^/lib {        
        root $client_dir;
        add_header Cache-Control "max-age=300000";
        expires 2h;
    }
    location ~ ^/src {        
        root /root/wiredcraft;
        add_header Cache-Control "max-age=300000";
        expires 2h;
    }
    location = /server.js {
        try_files /server/$which.js 404;
    }

    location ~ ^[^.]*$ {
        try_files  /index.htm 404;
    }
    location ~ ^/font {
        add_header Cache-Control "max-age=300000";
    }
    location ~ / {
        add_header Cache-Control "max-age=0";
        expires off;
        etag off;
    }


    listen 443 ssl; # managed by Certbot
}
